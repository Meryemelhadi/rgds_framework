function RT_getRange() {
	var sel;
	var obj=null;
	sel = document.selection
	
	if(sel.type != "Control")	{
		obj = sel.createRange().parentElement();
	}
	else {
		obj = sel.createRange()(0);
	}
	
	if (obj.isContentEditable) {
		return obj;
	} else {
		alert("please select text to modify");
		return null;
	}
}

function RT_getFullRange() {
	var sel;
	var obj=null;
	sel = document.selection
	
	if (sel.type != "Control"){
		range = sel.createRange();
		if (!range)	{
			alert("please select text to cleanup");
			return null;
		}		
		
		if (range.htmlText.length == 0)
		{
			obj = range.parentElement();
			if (obj.tagName=="BODY") {
				alert("please select text to cleanup");
				return null;
			}
				
			while(obj && obj.isContentEditable && obj.className!="input")
			{
				obj = obj.parentElement;
			}
		}
		else
			obj = range.parentElement();
			
		return obj;
	}
	else {
		obj = sel.createRange()(0);
	}
	
	if (typeof(obj.isContentEditable)!="undefined" && obj.isContentEditable) {
		return obj;
	} else {
		alert("please select text to cleanup");
		return null;
	}
}

function RT_execCommand(cmd)
{
	if (cmd.substring(0,3) == "RT_")
		eval(cmd+"();");
	else
	{
		if (RT_getRange()!=null)
			document.execCommand(cmd);
	}
}

//  ==== Image selection, follows Dialog API ====
// manage input field
function InputChooseImage() {
	this.open('imageDialog.php',600,400);
}

InputChooseImage.prototype.open = function(url,h,w) {
	this.w=600;
	this.h=400;
	openDialog(url,this,w,h);
}

InputChooseImage.prototype.onOk = function(result) {
	var box=result.size.box;

	document.execCommand("InsertImage",false,result.url);
	if (document.selection.type=="Control")
	{
		// get inserted img object
		var oControlRange = document.selection.createRange();
		var img = oControlRange.item(0);
		if (img.tagName=="IMG")
		{
			img.border=result.border;
			if (result.align!="inline")
				img.align=result.align;
		}
	}
}

InputChooseImage.prototype.onCancel = function() {
	alert("dialog cancel");
}

function RT_insertImg() {
	new InputChooseImage();
}

// ==== Cleanup of html range ====
function RT_cleanHTML()
{
	var e = RT_getFullRange();
		
	if (e!=null && e.innerHTML)
		e.innerHTML = RT_cleanup(e.innerHTML);
}
	
// Cleanup code coming from outside (with drag/drop copy/paste, etc.).
// Specially useful for cleaning up code generated by microsoft word.
//
// Removes class and style attributes, xml directive and islands,
// tags with namespaces, empty <p> or span tags.
function RT_cleanup(src) 
{  
	var s = ""+src;
	return s.replace(/<([\w]+) class=([^ |>]*)([^>]*)/gi, "<$1$3"
	).replace(/<([\w]+) style="([^"]*)"([^>]*)/gi, "<$1$3"
	).replace(/<\\?\??xml[^>]>/gi, "").replace(/<\/?\w+:[^>]*>/gi, ""
	).replace(/<p([^>])*>(&nbsp;)*\s*<\/p>/gi,""
	).replace(/<\/?font([^>])*>/gi,""
	).replace(/<span([^>])*>(&nbsp;)*\s*<\/span>/gi,"");
}
	